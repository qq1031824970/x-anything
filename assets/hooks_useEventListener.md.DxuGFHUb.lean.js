import{_ as t,a as s,ac as n,o as a}from"./chunks/framework.ByKdIX0z.js";const h=JSON.parse('{"title":"useEventListener","description":"useEventListener hooks文档","frontmatter":{"title":"useEventListener","description":"useEventListener hooks文档","next":{"link":"/hooks/useClickOutside","text":"useClickOutside 外部点击"},"prev":{"link":"/components/fullScreenContainer","text":"FullScreenContainer 全屏容器"}},"headers":[],"relativePath":"hooks/useEventListener.md","filePath":"hooks/useEventListener.md"}'),i={name:"hooks/useEventListener.md"};function o(r,e,l,u,c,p){return a(),s("div",null,e[0]||(e[0]=[n(`<h1 id="useeventlistener-事件监听" tabindex="-1">useEventListener 事件监听 <a class="header-anchor" href="#useeventlistener-事件监听" aria-label="Permalink to &quot;useEventListener 事件监听&quot;">​</a></h1><p>用于 vue 组件内监听事件，较原生的事件监听添加了在适当时机移除监听器，避免了重复书写。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>useEventListener(window, &#39;resize&#39;, () =&gt; {</span></span>
<span class="line"><span>// do something</span></span>
<span class="line"><span>})</span></span></code></pre></div><h2 id="useeventlistener-type" tabindex="-1">useEventListener TYPE <a class="header-anchor" href="#useeventlistener-type" aria-label="Permalink to &quot;useEventListener TYPE&quot;">​</a></h2><p><code>function useClickOutside(elementRef: Ref&lt;HTMLElement | void&gt;, callback: (e: Event) =&gt; void): void; </code></p>`,6)]))}const v=t(i,[["render",o]]);export{h as __pageData,v as default};
