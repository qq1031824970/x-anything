import{_ as s,a as t,ac as i,o as a}from"./chunks/framework.ByKdIX0z.js";const k=JSON.parse('{"title":"useClickOutside","description":"useClickOutside hooks文档","frontmatter":{"title":"useClickOutside","description":"useClickOutside hooks文档","prev":{"link":"/hooks/useEventListener","text":"事件监听"}},"headers":[],"relativePath":"hooks/useClickOutside.md","filePath":"hooks/useClickOutside.md"}'),o={name:"hooks/useClickOutside.md"};function l(n,e,c,d,u,r){return a(),t("div",null,e[0]||(e[0]=[i(`<h1 id="useclickoutside-外部点击" tabindex="-1">useClickOutside 外部点击 <a class="header-anchor" href="#useclickoutside-外部点击" aria-label="Permalink to &quot;useClickOutside 外部点击&quot;">​</a></h1><p>用于监听外部点击事件，外部点击时触发</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>useClickOutside(containerNode, () =&gt; {</span></span>
<span class="line"><span>  // do something</span></span>
<span class="line"><span>})</span></span></code></pre></div><h2 id="useclickoutside-type" tabindex="-1">useClickOutside TYPE <a class="header-anchor" href="#useclickoutside-type" aria-label="Permalink to &quot;useClickOutside TYPE&quot;">​</a></h2><p><code>function useClickOutside(elementRef: Ref&lt;HTMLElement | void&gt;, callback: (e: Event) =&gt; void): void; </code></p>`,6)]))}const h=s(o,[["render",l]]);export{k as __pageData,h as default};
